[project]
name = "django-workspaces"
description = "Django reusable app to manage user workspaces"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
  { name = "Christian Hartung", email = "hartung@live.com" },
]
keywords = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Typing :: Typed",
]
dependencies = [
  "django",
  "django-stubs-ext",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/hartungstenio/django-workspaces#readme"
Issues = "https://github.com/hartungstenio/django-workspaces/issues"
Source = "https://github.com/hartungstenio/django-workspaces"

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
source_pkgs = ["django_workspaces", "tests"]
branch = true
parallel = true
omit = [
  "src/django_workspaces/__about__.py",
]

[tool.coverage.paths]
django_workspaces = [
  "src/django_workspaces",
  "*/django-workspaces/src/django_workspaces",
]
tests = ["tests", "*/django-workspaces/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-asyncio",
  "pytest-deadfixtures",
  "django-stubs",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/django_workspaces tests}"

[tool.hatch.envs.hatch-static-analysis]
config-path = "none"

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "ERA",
  "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM818",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "INT",
  "ISC",
  "ICN",
  "LOG",
  "G",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "RSE",
  "RET",
  "SLF",
  "SIM",
  "SLOT",
  "TID",
  "TD",
  "TC",
  "PTH",
  "FLY",
  "I",
  "C90",
  "N",
  "PERF",
  "E",
  "W",
  "D",
  "F",
  "PGH",
  "PL",
  "UP",
  "FURB",
  "RUF",
  "TRY",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D104"]
